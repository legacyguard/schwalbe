{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(npm install)",
      "Bash(npm run lint)",
      "Bash(npm run build:*)",
      "Bash(npm run typecheck:*)",
      "Bash(cp:*)",
      "Bash(find:*)",
      "Bash(npm run lint:*)",
      "Bash(grep:*)",
      "Bash(npm i:*)",
      "Bash(npm ci:*)",
      "Bash(npm run:*)",
      "Bash(npm uninstall:*)",
      "Bash(rm:*)",
      "Bash(npx tsx:*)",
      "Bash(npx supabase db diff:*)",
      "Bash(npx supabase db test:*)",
      "Bash(npx supabase start:*)",
      "Bash(npx supabase:*)",
      "Bash(ls:*)",
      "Bash(mv:*)",
      "Bash(timeout 10s npm run dev:web-next)",
      "Bash(touch:*)",
      "Bash(chmod +x:apps/mobile/scripts/*.sh)",
      "Bash(npm view:*)",
      "Bash(claude doctor)",
      "Bash(claude doctor:*)",
      "Bash(npm --workspace=@schwalbe/mobile run typecheck)",
      "Bash(npm --workspace=@schwalbe/mobile run test)",
      "Bash(npm --workspace=@schwalbe/mobile run build)",
      "Bash(npm ls:*)",
      "Bash(npx eslint:*)",
      "Bash(npm audit:*)",
      "Bash(npm --workspace=@schwalbe/web run typecheck)",
      "Bash(npm --workspace=@schwalbe/web run lint)",
      "Bash(npx tsc:*)",
      "Bash(npm --workspace=@schwalbe/logic run typecheck)"
    ],
    "deny": [
      "Bash(git *:*)",
      "Bash(gh *:*)",
      "Bash(./scripts/deploy-emotional-sync.sh:*)",
      "Bash(apps/mobile/scripts/deploy-emotional-sync.sh:*)"
    ]
  }
}
JSON

git add .claude/settings.local.json.example
git commit -m "chore(security): add sanitized .claude/settings.local.json.example with safe allow-list and explicit deny rules" || true

echo "CI references to local settings file:"; grep -RIn "\\.claude/settings\\.local\\.json" .github/workflows || true
