import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@schwalbe/ui';
import { Button } from '@/components/ui/button';
export function RedirectSimulationModal({ open, onOpenChange, targets }) {
    return (_jsx(Dialog, { open: open, onOpenChange: onOpenChange, children: _jsxs(DialogContent, { className: "bg-slate-900 text-slate-100 border border-slate-700", children: [_jsx(DialogHeader, { children: _jsx(DialogTitle, { children: "Redirect simulation" }) }), _jsxs("div", { className: "p-6 space-y-4", children: [_jsx("p", { className: "text-sm", children: "Prost\u0159ed\u00ED nen\u00ED produk\u010Dn\u00ED. Prob\u00EDh\u00E1 simulace p\u0159esm\u011Brov\u00E1n\u00ED \u2014 \u017E\u00E1dn\u00E1 navigace nebude provedena." }), _jsxs("div", { children: [_jsx("div", { className: "text-sm font-semibold mb-2", children: "Target URLs for domains:" }), _jsx("ul", { className: "text-sm list-disc pl-5 space-y-1", children: targets.map((t) => (_jsxs("li", { children: [_jsx("span", { className: "font-mono uppercase mr-2", children: t.code }), _jsx("span", { className: "mr-2 text-slate-300", children: t.host }), _jsx("a", { href: t.url, onClick: (e) => e.preventDefault(), className: "text-blue-400 hover:underline", "aria-label": `Simulated target for ${t.code}`, children: t.url })] }, t.code))) })] }), _jsx("div", { className: "pt-2", children: _jsx(Button, { onClick: () => onOpenChange(false), children: "Close" }) })] })] }) }));
}
