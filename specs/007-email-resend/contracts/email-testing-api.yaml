openapi: 3.0.3
info:
  title: Email Testing API
  description: API for testing email functionality during development
  version: 1.0.0
  contact:
    name: LegacyGuard Development Team

servers:
  - url: /api/email-testing
    description: Email testing API

paths:
  /send-test:
    post:
      summary: Send test email
      description: Send a test email to verify configuration and delivery
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - to
                - subject
              properties:
                to:
                  type: string
                  format: email
                  description: Test recipient email
                subject:
                  type: string
                  description: Test email subject
                html:
                  type: string
                  description: HTML content for test email
                text:
                  type: string
                  description: Plain text content for test email
                templateId:
                  type: string
                  description: Template ID to use for test
                variables:
                  type: object
                  description: Template variables for rendering
      responses:
        '200':
          description: Test email sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  messageId:
                    type: string
                  deliveryId:
                    type: string
        '400':
          description: Invalid request parameters
        '500':
          description: Email sending failed

  /validate-template:
    post:
      summary: Validate email template
      description: Validate template syntax and variables
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - templateId
              properties:
                templateId:
                  type: string
                  description: Template ID to validate
                variables:
                  type: object
                  description: Test variables for validation
      responses:
        '200':
          description: Template validation results
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                  errors:
                    type: array
                    items:
                      type: string
                  rendered:
                    type: object
                    properties:
                      subject:
                        type: string
                      html:
                        type: string
                      text:
                        type: string
        '400':
          description: Invalid template or variables
        '404':
          description: Template not found

  /check-delivery:
    get:
      summary: Check email delivery status
      description: Check the delivery status of a test email
      parameters:
        - name: deliveryId
          in: query
          required: true
          schema:
            type: string
          description: Delivery ID to check
      responses:
        '200':
          description: Delivery status information
          content:
            application/json:
              schema:
                type: object
                properties:
                  deliveryId:
                    type: string
                  status:
                    type: string
                    enum: [queued, sent, delivered, bounced, failed]
                  sentAt:
                    type: string
                    format: date-time
                  deliveredAt:
                    type: string
                    format: date-time
                  errorMessage:
                    type: string
                  retryCount:
                    type: integer
        '404':
          description: Delivery not found

  /bulk-test:
    post:
      summary: Send bulk test emails
      description: Send multiple test emails for load testing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - emails
              properties:
                emails:
                  type: array
                  minItems: 1
                  maxItems: 50
                  items:
                    type: object
                    required:
                      - to
                      - subject
                    properties:
                      to:
                        type: string
                        format: email
                      subject:
                        type: string
                      html:
                        type: string
                      text:
                        type: string
                delay:
                  type: integer
                  minimum: 0
                  maximum: 5000
                  default: 100
                  description: Delay between emails in milliseconds
      responses:
        '202':
          description: Bulk test initiated
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobId:
                    type: string
                  totalEmails:
                    type: integer
                  estimatedDuration:
                    type: integer
        '400':
          description: Invalid request parameters

  /bulk-test/{jobId}:
    get:
      summary: Check bulk test status
      description: Check the status of a bulk email test job
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Bulk test job status
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobId:
                    type: string
                  status:
                    type: string
                    enum: [running, completed, failed]
                  totalEmails:
                    type: integer
                  sentEmails:
                    type: integer
                  failedEmails:
                    type: integer
                  startedAt:
                    type: string
                    format: date-time
                  completedAt:
                    type: string
                    format: date-time
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        email:
                          type: string
                        deliveryId:
                          type: string
                        status:
                          type: string
                        error:
                          type: string
        '404':
          description: Job not found

  /spam-test:
    post:
      summary: Test email for spam compliance
      description: Test email content for spam compliance using external services
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - subject
                - html
              properties:
                subject:
                  type: string
                html:
                  type: string
                text:
                  type: string
      responses:
        '200':
          description: Spam test results
          content:
            application/json:
              schema:
                type: object
                properties:
                  score:
                    type: number
                    minimum: 0
                    maximum: 10
                  verdict:
                    type: string
                    enum: [spam, not_spam, unknown]
                  details:
                    type: object
                  recommendations:
                    type: array
                    items:
                      type: string
        '400':
          description: Invalid email content

  /accessibility-test:
    post:
      summary: Test email for accessibility compliance
      description: Test email content for accessibility compliance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - html
              properties:
                html:
                  type: string
                  description: HTML content to test
      responses:
        '200':
          description: Accessibility test results
          content:
            application/json:
              schema:
                type: object
                properties:
                  score:
                    type: number
                    minimum: 0
                    maximum: 100
                  violations:
                    type: array
                    items:
                      type: object
                      properties:
                        rule:
                          type: string
                        impact:
                          type: string
                        description:
                          type: string
                        help:
                          type: string
                  recommendations:
                    type: array
                    items:
                      type: string
        '400':
          description: Invalid HTML content