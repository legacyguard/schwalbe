openapi: 3.0.3
info:
  title: Error Logging API
  version: 1.0.0
  description: Error logging and tracking API for structured error management

servers:
  - url: https://api.schwalbe.dev
    description: Production server
  - url: https://api-staging.schwalbe.dev
    description: Staging server

security:
  - bearerAuth: []

paths:
  /api/errors/log:
    post:
      summary: Log application errors
      description: Log client-side and server-side application errors
      operationId: logError
      tags:
        - Error Logging
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - errorType
                - message
              properties:
                errorType:
                  type: string
                  enum: [javascript, api, network, validation, authentication, authorization, database, external_service]
                  example: javascript
                message:
                  type: string
                  maxLength: 1000
                  example: "TypeError: Cannot read property 'x' of undefined"
                stack:
                  type: string
                  description: Error stack trace (sanitized)
                  example: "at Component.render (component.js:15:10)"
                severity:
                  type: string
                  enum: [low, medium, high, critical]
                  default: medium
                  example: high
                context:
                  type: object
                  additionalProperties: true
                  example:
                    userId: user_123
                    page: /dashboard
                    action: save_document
                    userAgent: Mozilla/5.0...
                userAgent:
                  type: string
                  example: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36
                url:
                  type: string
                  example: https://app.schwalbe.dev/dashboard
                sessionId:
                  type: string
                  example: session_12345
                timestamp:
                  type: string
                  format: date-time
                userId:
                  type: string
                  description: User ID if authenticated
                  example: user_123
      responses:
        '202':
          description: Error logged successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: logged
                  errorId:
                    type: string
                    example: err_12345
        '400':
          description: Invalid error data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid error type

  /api/errors:
    get:
      summary: Query error logs
      description: Query and retrieve error logs with filtering and pagination
      operationId: queryErrors
      tags:
        - Error Querying
      parameters:
        - name: errorType
          in: query
          schema:
            type: string
            enum: [javascript, api, network, validation, authentication, authorization, database, external_service]
        - name: severity
          in: query
          schema:
            type: string
            enum: [low, medium, high, critical]
        - name: userId
          in: query
          schema:
            type: string
        - name: startDate
          in: query
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          schema:
            type: string
            format: date-time
        - name: resolved
          in: query
          schema:
            type: boolean
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 50
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
            enum: [created_at, severity, error_type]
            default: created_at
        - name: sortOrder
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: Error logs data
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorLog'
                  total:
                    type: integer
                  limit:
                    type: integer
                  offset:
                    type: integer
                  filters:
                    type: object
                    properties:
                      errorType:
                        type: string
                      severity:
                        type: string
                      userId:
                        type: string
                      dateRange:
                        type: object
                        properties:
                          start:
                            type: string
                            format: date-time
                          end:
                            type: string
                            format: date-time
        '400':
          description: Invalid query parameters

  /api/errors/{id}:
    get:
      summary: Get specific error details
      description: Get detailed information about a specific error
      operationId: getErrorDetails
      tags:
        - Error Details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: err_12345
      responses:
        '200':
          description: Error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLog'
        '404':
          description: Error not found
        '403':
          description: Access denied

  /api/errors/batch:
    post:
      summary: Batch error logging
      description: Log multiple errors in a single request
      operationId: batchLogErrors
      tags:
        - Error Logging
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - errors
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    required:
                      - errorType
                      - message
                    properties:
                      errorType:
                        type: string
                        enum: [javascript, api, network, validation, authentication, authorization, database, external_service]
                      message:
                        type: string
                        maxLength: 1000
                      stack:
                        type: string
                      severity:
                        type: string
                        enum: [low, medium, high, critical]
                        default: medium
                      context:
                        type: object
                        additionalProperties: true
                      userAgent:
                        type: string
                      url:
                        type: string
                      sessionId:
                        type: string
                      timestamp:
                        type: string
                        format: date-time
                      userId:
                        type: string
                  maxItems: 100
      responses:
        '202':
          description: Errors logged successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: logged
                  loggedCount:
                    type: integer
                    example: 5
                  errorIds:
                    type: array
                    items:
                      type: string
                    example: ["err_12345", "err_12346"]
        '400':
          description: Invalid batch data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid batch size
                  details:
                    type: array
                    items:
                      type: string

  /api/errors/summary:
    get:
      summary: Get error summary statistics
      description: Get aggregated error statistics and trends
      operationId: getErrorSummary
      tags:
        - Error Analytics
      parameters:
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: groupBy
          in: query
          schema:
            type: string
            enum: [day, hour, error_type, severity]
            default: day
      responses:
        '200':
          description: Error summary statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  summary:
                    type: object
                    properties:
                      totalErrors:
                        type: integer
                      uniqueUsers:
                        type: integer
                      resolvedErrors:
                        type: integer
                      criticalErrors:
                        type: integer
                      errorTypes:
                        type: object
                        additionalProperties:
                          type: integer
                      severityBreakdown:
                        type: object
                        properties:
                          low:
                            type: integer
                          medium:
                            type: integer
                          high:
                            type: integer
                          critical:
                            type: integer
                      topErrorMessages:
                        type: array
                        items:
                          type: object
                          properties:
                            message:
                              type: string
                            count:
                              type: integer
                            lastOccurred:
                              type: string
                              format: date-time
                      timeSeries:
                        type: array
                        items:
                          type: object
                          properties:
                            timestamp:
                              type: string
                              format: date-time
                            errors:
                              type: integer
                            critical:
                              type: integer
                            resolved:
                              type: integer
                  dateRange:
                    type: object
                    properties:
                      start:
                        type: string
                        format: date-time
                      end:
                        type: string
                        format: date-time
                  trends:
                    type: object
                    properties:
                      errorRateChange:
                        type: number
                        description: Percentage change in error rate
                      mostCommonError:
                        type: string
                      resolutionRate:
                        type: number
                        description: Percentage of errors resolved
        '400':
          description: Invalid date range

  /api/errors/{id}/resolve:
    put:
      summary: Mark error as resolved
      description: Mark a specific error as resolved
      operationId: resolveError
      tags:
        - Error Management
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: err_12345
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - resolution
              properties:
                resolution:
                  type: string
                  maxLength: 1000
                  example: Fixed null pointer check in component
                resolvedBy:
                  type: string
                  example: user_123
                resolutionNotes:
                  type: string
                  example: Added defensive programming to prevent similar issues
      responses:
        '200':
          description: Error marked as resolved
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: resolved
                  resolvedAt:
                    type: string
                    format: date-time
                  resolvedBy:
                    type: string
        '404':
          description: Error not found
        '403':
          description: Insufficient permissions

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ErrorLog:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        errorType:
          type: string
          enum: [javascript, api, network, validation, authentication, authorization, database, external_service]
        message:
          type: string
        stack:
          type: string
        severity:
          type: string
          enum: [low, medium, high, critical]
        context:
          type: object
          additionalProperties: true
        userAgent:
          type: string
        url:
          type: string
        sessionId:
          type: string
        resolved:
          type: boolean
        resolvedAt:
          type: string
          format: date-time
        resolvedBy:
          type: string
        resolution:
          type: string
        createdAt:
          type: string
          format: date-time

    ErrorBatch:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - errorType
              - message
            properties:
              errorType:
                type: string
                enum: [javascript, api, network, validation, authentication, authorization, database, external_service]
              message:
                type: string
              stack:
                type: string
              severity:
                type: string
                enum: [low, medium, high, critical]
              context:
                type: object
                additionalProperties: true
              userAgent:
                type: string
              url:
                type: string
              sessionId:
                type: string
              timestamp:
                type: string
                format: date-time
              userId:
                type: string
          maxItems: 100

    ErrorSummary:
      type: object
      properties:
        totalErrors:
          type: integer
        uniqueUsers:
          type: integer
        resolvedErrors:
          type: integer
        criticalErrors:
          type: integer
        errorTypes:
          type: object
          additionalProperties:
            type: integer
        severityBreakdown:
          type: object
          properties:
            low:
              type: integer
            medium:
              type: integer
            high:
              type: integer
            critical:
              type: integer
        topErrorMessages:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
              count:
                type: integer
              lastOccurred:
                type: string
                format: date-time
        timeSeries:
          type: array
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              errors:
                type: integer
              critical:
                type: integer
              resolved:
                type: integer

    ErrorResolution:
      type: object
      required:
        - resolution
      properties:
        resolution:
          type: string
        resolvedBy:
          type: string
        resolutionNotes:
          type: string

  responses:
    ErrorLogged:
      description: Error logged successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: logged
              errorId:
                type: string

    BatchLogged:
      description: Errors logged successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: logged
              loggedCount:
                type: integer
              errorIds:
                type: array
                items:
                  type: string

    ValidationError:
      description: Invalid error data
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Invalid error type
              details:
                type: array
                items:
                  type: string

    UnauthorizedError:
      description: Authentication required
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Unauthorized

    ForbiddenError:
      description: Insufficient permissions
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Forbidden

    NotFoundError:
      description: Error not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Error not found