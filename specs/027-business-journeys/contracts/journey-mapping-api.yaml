openapi: 3.0.3
info:
  title: Journey Mapping API
  version: 1.0.0
  description: API for managing customer journeys and touchpoint tracking

servers:
  - url: https://api.schwalbe.com/v1
    description: Production server

security:
  - bearerAuth: []

paths:
  /journeys:
    post:
      summary: Create a new customer journey
      operationId: createJourney
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - journeyType
              properties:
                userId:
                  type: string
                  format: uuid
                journeyType:
                  type: string
                  enum: [consumer, professional, partner]
                personaType:
                  type: string
                entryPoint:
                  type: string
                targetOutcome:
                  type: string
                metadata:
                  type: object
      responses:
        '201':
          description: Journey created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Journey'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

    get:
      summary: List user journeys
      operationId: listJourneys
      parameters:
        - name: userId
          in: query
          schema:
            type: string
            format: uuid
        - name: journeyType
          in: query
          schema:
            type: string
            enum: [consumer, professional, partner]
        - name: status
          in: query
          schema:
            type: string
            enum: [active, completed, paused]
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: List of journeys
          content:
            application/json:
              schema:
                type: object
                properties:
                  journeys:
                    type: array
                    items:
                      $ref: '#/components/schemas/Journey'
                  total:
                    type: integer
                  limit:
                    type: integer
                  offset:
                    type: integer

  /journeys/{journeyId}:
    get:
      summary: Get journey details
      operationId: getJourney
      parameters:
        - name: journeyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Journey details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Journey'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      summary: Update journey
      operationId: updateJourney
      parameters:
        - name: journeyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currentStage:
                  type: string
                completionPercentage:
                  type: number
                  minimum: 0
                  maximum: 100
                isActive:
                  type: boolean
                metadata:
                  type: object
      responses:
        '200':
          description: Journey updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Journey'
        '404':
          $ref: '#/components/responses/NotFound'

  /journeys/{journeyId}/progress:
    put:
      summary: Update journey progress
      operationId: updateJourneyProgress
      parameters:
        - name: journeyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - stage
              properties:
                stage:
                  type: string
                completionPercentage:
                  type: number
                  minimum: 0
                  maximum: 100
                metadata:
                  type: object
      responses:
        '200':
          description: Progress updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Journey'
        '404':
          $ref: '#/components/responses/NotFound'

  /journeys/{journeyId}/touchpoints:
    post:
      summary: Record touchpoint interaction
      operationId: recordTouchpoint
      parameters:
        - name: journeyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - touchpointType
                - channel
              properties:
                touchpointType:
                  type: string
                touchpointName:
                  type: string
                channel:
                  type: string
                  enum: [web, mobile, email, api, support]
                pageUrl:
                  type: string
                featureName:
                  type: string
                actionTaken:
                  type: string
                startedAt:
                  type: string
                  format: date-time
                success:
                  type: boolean
                errorMessage:
                  type: string
                userFeedbackRating:
                  type: integer
                  minimum: 1
                  maximum: 5
                metadata:
                  type: object
      responses:
        '201':
          description: Touchpoint recorded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Touchpoint'
        '400':
          $ref: '#/components/responses/BadRequest'

    get:
      summary: Get journey touchpoints
      operationId: getJourneyTouchpoints
      parameters:
        - name: journeyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Journey touchpoints
          content:
            application/json:
              schema:
                type: object
                properties:
                  touchpoints:
                    type: array
                    items:
                      $ref: '#/components/schemas/Touchpoint'
                  total:
                    type: integer

  /journeys/{journeyId}/analytics:
    get:
      summary: Get journey analytics
      operationId: getJourneyAnalytics
      parameters:
        - name: journeyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: metrics
          in: query
          schema:
            type: array
            items:
              type: string
              enum: [completion_rate, time_spent, touchpoint_count, satisfaction_score]
      responses:
        '200':
          description: Journey analytics
          content:
            application/json:
              schema:
                type: object
                properties:
                  journeyId:
                    type: string
                    format: uuid
                  metrics:
                    type: object
                    additionalProperties:
                      type: number

components:
  schemas:
    Journey:
      type: object
      required:
        - id
        - userId
        - journeyType
        - currentStage
        - startedAt
        - isActive
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        journeyType:
          type: string
          enum: [consumer, professional, partner]
        currentStage:
          type: string
        startedAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time
        isActive:
          type: boolean
        completionPercentage:
          type: number
          minimum: 0
          maximum: 100
        timeSpentMinutes:
          type: integer
        touchpointCount:
          type: integer
        personaType:
          type: string
        entryPoint:
          type: string
        targetOutcome:
          type: string
        metadata:
          type: object

    Touchpoint:
      type: object
      required:
        - id
        - journeyId
        - touchpointType
        - channel
        - startedAt
      properties:
        id:
          type: string
          format: uuid
        journeyId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        touchpointType:
          type: string
        touchpointName:
          type: string
        channel:
          type: string
          enum: [web, mobile, email, api, support]
        pageUrl:
          type: string
        featureName:
          type: string
        actionTaken:
          type: string
        startedAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time
        durationSeconds:
          type: integer
        success:
          type: boolean
        errorMessage:
          type: string
        userFeedbackRating:
          type: integer
          minimum: 1
          maximum: 5
        metadata:
          type: object
        performanceMetrics:
          type: object

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              message:
                type: string
              details:
                type: object

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              message:
                type: string

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              message:
                type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT