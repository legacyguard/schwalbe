name: Test Secrets Configuration

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to test'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
          - development

jobs:
  test-secrets:
    name: Test Secrets Availability
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Test Repository Secrets
        run: |
          echo "🔍 Testing Repository Secrets..."
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          
          # Test if secrets are available (not their values)
          [ ! -z "${{ secrets.GITHUB_TOKEN }}" ] && echo "✅ GITHUB_TOKEN" || echo "❌ GITHUB_TOKEN"
          [ ! -z "${{ secrets.TURBO_TOKEN }}" ] && echo "✅ TURBO_TOKEN" || echo "⚠️  TURBO_TOKEN (optional)"
          [ ! -z "${{ secrets.TURBO_TEAM }}" ] && echo "✅ TURBO_TEAM" || echo "⚠️  TURBO_TEAM (optional)"
      
      - name: Test Vercel Secrets
        run: |
          echo ""
          echo "📦 Testing Vercel Secrets..."
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          
          [ ! -z "${{ secrets.VERCEL_TOKEN }}" ] && echo "✅ VERCEL_TOKEN" || echo "❌ VERCEL_TOKEN"
          [ ! -z "${{ secrets.VERCEL_ORG_ID }}" ] && echo "✅ VERCEL_ORG_ID" || echo "❌ VERCEL_ORG_ID"
          [ ! -z "${{ secrets.VERCEL_PROJECT_ID }}" ] && echo "✅ VERCEL_PROJECT_ID" || echo "❌ VERCEL_PROJECT_ID"
      
      - name: Test Supabase Secrets
        run: |
          echo ""
          echo "🗄️ Testing Supabase Secrets..."
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          
          [ ! -z "${{ secrets.VITE_SUPABASE_URL }}" ] && echo "✅ VITE_SUPABASE_URL" || echo "❌ VITE_SUPABASE_URL"
          [ ! -z "${{ secrets.VITE_SUPABASE_ANON_KEY }}" ] && echo "✅ VITE_SUPABASE_ANON_KEY" || echo "❌ VITE_SUPABASE_ANON_KEY"
          [ ! -z "${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" ] && echo "✅ SUPABASE_SERVICE_ROLE_KEY" || echo "⚠️  SUPABASE_SERVICE_ROLE_KEY (optional)"
      
      - name: Test Clerk Secrets
        run: |
          echo ""
          echo "🔐 Testing Clerk Secrets..."
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          
          [ ! -z "${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }}" ] && echo "✅ VITE_CLERK_PUBLISHABLE_KEY" || echo "❌ VITE_CLERK_PUBLISHABLE_KEY"
          [ ! -z "${{ secrets.CLERK_SECRET_KEY }}" ] && echo "✅ CLERK_SECRET_KEY" || echo "⚠️  CLERK_SECRET_KEY (optional for builds)"
      
      - name: Test Optional Secrets
        run: |
          echo ""
          echo "🔧 Testing Optional Secrets..."
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          
          [ ! -z "${{ secrets.STRIPE_PUBLISHABLE_KEY }}" ] && echo "✅ STRIPE_PUBLISHABLE_KEY" || echo "⚠️  STRIPE_PUBLISHABLE_KEY"
          [ ! -z "${{ secrets.STRIPE_SECRET_KEY }}" ] && echo "✅ STRIPE_SECRET_KEY" || echo "⚠️  STRIPE_SECRET_KEY"
          [ ! -z "${{ secrets.CLOUDFLARE_ZONE_ID }}" ] && echo "✅ CLOUDFLARE_ZONE_ID" || echo "⚠️  CLOUDFLARE_ZONE_ID"
          [ ! -z "${{ secrets.CLOUDFLARE_API_TOKEN }}" ] && echo "✅ CLOUDFLARE_API_TOKEN" || echo "⚠️  CLOUDFLARE_API_TOKEN"
          [ ! -z "${{ secrets.SLACK_WEBHOOK }}" ] && echo "✅ SLACK_WEBHOOK" || echo "⚠️  SLACK_WEBHOOK"
          [ ! -z "${{ secrets.SNYK_TOKEN }}" ] && echo "✅ SNYK_TOKEN" || echo "⚠️  SNYK_TOKEN"
          [ ! -z "${{ secrets.SONAR_TOKEN }}" ] && echo "✅ SONAR_TOKEN" || echo "⚠️  SONAR_TOKEN"
      
      - name: Test Build with Secrets
        run: |
          echo ""
          echo "🏗️ Testing Build Configuration..."
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          
          # Test if we can create a build config with secrets
          cat > test-build-config.js << EOF
          const config = {
            supabase: {
              url: process.env.VITE_SUPABASE_URL ? '✅ Configured' : '❌ Missing',
              key: process.env.VITE_SUPABASE_ANON_KEY ? '✅ Configured' : '❌ Missing'
            },
            clerk: {
              key: process.env.VITE_CLERK_PUBLISHABLE_KEY ? '✅ Configured' : '❌ Missing'
            },
            vercel: {
              token: process.env.VERCEL_TOKEN ? '✅ Configured' : '❌ Missing'
            }
          };
          console.log('Build Configuration Status:');
          console.log(JSON.stringify(config, null, 2));
          EOF
          
          VITE_SUPABASE_URL="${{ secrets.VITE_SUPABASE_URL }}" \
          VITE_SUPABASE_ANON_KEY="${{ secrets.VITE_SUPABASE_ANON_KEY }}" \
          VITE_CLERK_PUBLISHABLE_KEY="${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }}" \
          VERCEL_TOKEN="${{ secrets.VERCEL_TOKEN }}" \
          node test-build-config.js
      
      - name: Summary
        run: |
          echo ""
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "📊 Test Summary for ${{ github.event.inputs.environment }} environment"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo ""
          echo "Legend:"
          echo "  ✅ = Secret configured and available"
          echo "  ❌ = Required secret missing"
          echo "  ⚠️  = Optional secret not configured"
          echo ""
          echo "If you see ❌ marks, please configure the missing secrets."
          echo "See docs/GITHUB_ENVIRONMENTS.md for instructions."
